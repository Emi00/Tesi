display /x $xmm2.v2_double
ni
c
r
c
b * selectionSortAVX512(double*, int)
r
ni
b * selectionSortAVX512(double*, int)
r
ni
b * selectionSortAVX512(double*, int)
r
ni
si
ni
b * selectionSort
r
disassemble selectionSort
disassemble main
b * main
r
ni
ni
c
b * main
r
disassemble main
b * main + 57
c
disassemble main
b * main + 89
c
b * main + 57
r
ni
ni
b * selectionSortAVX512_v2(double*, int) 
r
b * selectionSortAVX512_v2(double*, int) 
r 5000 2
disassemble selectionSortAVX512_v2(double*, int) 
ni
x/x $rip + 0x130e
x/10x $rip + 0x130e
x/100x $rip + 0x130e
ni
ni
disassemble selectionSortAVX512_v2(double*, int) 
ni
ni
nini
ni
ni
c
r 10 1
b * selectionSortAVX512_v1
r 10 1
ni
disassemble add_vectors(std::vector<float, std::allocator<float> > const&, std::vector<float, std::allocator<float> > const&, std::vector<float, std::allocator<float> >&) 
b * add_vectors(std::vector<float, std::allocator<float> > const&, std::vector<float, std::allocator<float> > const&, std::vector<float, std::allocator<float> >&) 
disassemble add_vectors(std::vector<float, std::allocator<float> > const&, std::vector<float, std::allocator<float> > const&, std::vector<float, std::allocator<float> >&) 
disassemble selectionSort(double*, int) 
disassemble selectionSort(double*, int) 
disassemble selectionSort(double*, int) 
disassemble selectionSortAVX512_v5(double*, int) 
disassemble insertionSortAVX512_v5
disassemble selectionSortAVX512_v5(double*, int) 
disassemble selectionSortAVX512_v5(double*, int) 
b * selectionSortAVX512_v5(double*, int) 
r
b * selectionSortAVX512_v5(double*, int) 
r 100 5 0 0 
ni
ni
display /x $zmm0.v2_double
x/x $zmm0
x/16x $zmm0
x $xmm0
x/x $xmm0
display /x $xmm0.v2_double
display /x $zmm0.v8_double
display /x $zmm1.v8_double
display /x $zmm2.v8_double
ni
ni
b * selectionSortAVX512_v5(double*, int) 
display /x $zmm0.v8_double
r 100 5 0 0 
display /x $zmm1.v8_double
display /x $zmm2.v8_double
ni
disassemble selectionSortAVX512_v5(double*, int) 
b * selectionSortAVX512_v5(double*, int) +92
c
ni
n
ni
n
n
ni
disassemble selectionSortAVX512_v5(double*, int) 
ni
ni
ni
ni
disassemble selectionSortAVX512_v5(double*, int) 
b * selectionSortAVX512_v5(double*, int) 
display /x $zmm0.v8_double
display /x $zmm1.v8_double
display /x $zmm2.v8_double
r 100 5 0 0 
ni
b * selectionSortAVX512_v5(double*, int) 
r 100 5 0 0 
display /x $zmm0.v8_double
display /x $zmm1.v8_double
display /x $zmm2.v8_double
disassemble selectionSortAVX512_v5(double*, int) 
b * selectionSortAVX512_v5(double*, int) + 132
c
ni
ni
mi
ni
ni
ni
ni
ni
disassemble selectionSortAVX512_v5(double*, int) 
b * selectionSortAVX512_v5(double*, int) + 174
c
c
c
r 100 5 0 0 
disassemble selectionSortAVX512_v5(double*, int) 
b* selectionSortAVX512_v5(double*, int) +274
r 100 5 0 0
disassemble insertionSortAVX512_ChatGPT(double*, unsigned long) 
disassemble insertionSortAVX512_v1(double*, int) 
disassemble insertionSortAVX512_ChatGPT(double*, unsigned long) 
b * selectionSortAVX512_v1(double*, int) 
b * insertionSortAVX512_v1(double*, int) 
r 100 2 0 0 
disassemble insertionSortAVX512_v1(double*, int) 
disassemble bubbleSortAVX512_v1(double*, int) 
disassemble bubbleSortAVX512_v2(double*, int) 
b * bubbleSort(double*, int)
r 10 0 0 2
b * bubbleSortAVX512_v1(double*, int) 
r 10 1 0 2
ni
ni
ni
ni
nini
ni
c
r 10 2 0 0
b * bubbleSortAVX512_v2(double*, int) 
r 10 2 0 0
ni
ni
ni
c
r 10 1 0 0
ni
c
r 10 0 0 0
b * bubbleSort(double*, int)
r 10 0 0 0
ni
b * bubbleSort(double*, int)
r 10 0 0 0
b * bubbleSortAVX512_v1(double*, int) 
c
r 10 1 0 0
ni
b * bubbleSortAVX512_v2(double*, int) 
r 10 0 0 0
r 10 0 0 0
r 10 2 0 0 0
disassemble bubbleSortAVX512_v1(double*, int) 
b * bubbleSortAVX512_v1(double*, int) 
r 10 0 2
r 10 1 3
r 10 1 1
r 10 1 3
b * bubbleSortAVX512_v1(double*, int) 
r 10 1 3 1
disassemble bubbleSortAVX512_v2(double*, int) 
b * bubbleSortAVX512_v2(double*, int) 
r 10 2 3 1
b * bubbleSortAVX512_v1(double*, int) 
r 10 1 3 1
ni
ni
ni
b * bubbleSortAVX512_v2(double*, int) 
r 10 1 2 1
b * bubbleSortAVX512_v1(double*, int) 
r 10 1 2 1
ni
ni
ni
ni
ni
b * bubbleSortAVX512_v1(double*, int) 
r 10 1 3 1
ni
x/x rcx - 0x40
x/x $rcx - 0x40
x/32x $rcx 
x/64x $rcx 
x/20x $rcx - 0x32
x/64x $rcx - 0x40
x/x $rcx - 0x39
ni
x/x $rdx
ni
nini
ni
c
b * bubbleSortAVX512_v2(double*, int) 
r 10 1 3 1
disassemble bubbleSortAVX512_v1(double*, int) 
disassemble bubbleSortAVX512_v2(double*, int) 
b * bubbleSortAVX512_v2(double*, int) 
r 10 2 3 1
ni
b * bubbleSortAVX512_v2(double*, int) 
r 10 1 3 1
r 10 2 3 1
ni
ni
ni
ni
ni
ni
ni
ni
ni
b * bubbleSortAVX512_6
b * bubbleSortAVX512_v6(double*, int) 
disassemble bubbleSortAVX512_v6(double*, int) 
r 100 8 1 0
ni
disassemble add_vectors(std::vector<float, std::allocator<float> > const&, std::vector<float, std::allocator<float> > const&, std::vector<float, std::allocator<float> >&) 
disassemble add_vectors(std::vector<float, std::allocator<float> > const&, std::vector<float, std::allocator<float> > const&, std::vector<float, std::allocator<float> >&) 
disassemble bubbleSortAVX512_v6(double*, int) 
b * bubbleSortAVX512_v6(double*, int) 
r 1000 8 0 0
ni
disassemble bubbleSortAVX512_v6(double*, int) 
ls
disassemble sort(double*, int) 
