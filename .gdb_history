ni
b * selectionSortAVX512_v5(double*, int) 
r 100 5 0 0 
display /x $zmm0.v8_double
display /x $zmm1.v8_double
display /x $zmm2.v8_double
disassemble selectionSortAVX512_v5(double*, int) 
b * selectionSortAVX512_v5(double*, int) + 132
c
ni
ni
mi
ni
ni
ni
ni
ni
disassemble selectionSortAVX512_v5(double*, int) 
b * selectionSortAVX512_v5(double*, int) + 174
c
c
c
r 100 5 0 0 
disassemble selectionSortAVX512_v5(double*, int) 
b* selectionSortAVX512_v5(double*, int) +274
r 100 5 0 0
disassemble insertionSortAVX512_ChatGPT(double*, unsigned long) 
disassemble insertionSortAVX512_v1(double*, int) 
disassemble insertionSortAVX512_ChatGPT(double*, unsigned long) 
b * selectionSortAVX512_v1(double*, int) 
b * insertionSortAVX512_v1(double*, int) 
r 100 2 0 0 
disassemble insertionSortAVX512_v1(double*, int) 
disassemble bubbleSortAVX512_v1(double*, int) 
disassemble bubbleSortAVX512_v2(double*, int) 
b * bubbleSort(double*, int)
r 10 0 0 2
b * bubbleSortAVX512_v1(double*, int) 
r 10 1 0 2
ni
ni
ni
ni
nini
ni
c
r 10 2 0 0
b * bubbleSortAVX512_v2(double*, int) 
r 10 2 0 0
ni
ni
ni
c
r 10 1 0 0
ni
c
r 10 0 0 0
b * bubbleSort(double*, int)
r 10 0 0 0
ni
b * bubbleSort(double*, int)
r 10 0 0 0
b * bubbleSortAVX512_v1(double*, int) 
c
r 10 1 0 0
ni
b * bubbleSortAVX512_v2(double*, int) 
r 10 0 0 0
r 10 0 0 0
r 10 2 0 0 0
disassemble bubbleSortAVX512_v1(double*, int) 
b * bubbleSortAVX512_v1(double*, int) 
r 10 0 2
r 10 1 3
r 10 1 1
r 10 1 3
b * bubbleSortAVX512_v1(double*, int) 
r 10 1 3 1
disassemble bubbleSortAVX512_v2(double*, int) 
b * bubbleSortAVX512_v2(double*, int) 
r 10 2 3 1
b * bubbleSortAVX512_v1(double*, int) 
r 10 1 3 1
ni
ni
ni
b * bubbleSortAVX512_v2(double*, int) 
r 10 1 2 1
b * bubbleSortAVX512_v1(double*, int) 
r 10 1 2 1
ni
ni
ni
ni
ni
b * bubbleSortAVX512_v1(double*, int) 
r 10 1 3 1
ni
x/x rcx - 0x40
x/x $rcx - 0x40
x/32x $rcx 
x/64x $rcx 
x/20x $rcx - 0x32
x/64x $rcx - 0x40
x/x $rcx - 0x39
ni
x/x $rdx
ni
nini
ni
c
b * bubbleSortAVX512_v2(double*, int) 
r 10 1 3 1
disassemble bubbleSortAVX512_v1(double*, int) 
disassemble bubbleSortAVX512_v2(double*, int) 
b * bubbleSortAVX512_v2(double*, int) 
r 10 2 3 1
ni
b * bubbleSortAVX512_v2(double*, int) 
r 10 1 3 1
r 10 2 3 1
ni
ni
ni
ni
ni
ni
ni
ni
ni
b * bubbleSortAVX512_6
b * bubbleSortAVX512_v6(double*, int) 
disassemble bubbleSortAVX512_v6(double*, int) 
r 100 8 1 0
ni
disassemble add_vectors(std::vector<float, std::allocator<float> > const&, std::vector<float, std::allocator<float> > const&, std::vector<float, std::allocator<float> >&) 
disassemble add_vectors(std::vector<float, std::allocator<float> > const&, std::vector<float, std::allocator<float> > const&, std::vector<float, std::allocator<float> >&) 
disassemble bubbleSortAVX512_v6(double*, int) 
b * bubbleSortAVX512_v6(double*, int) 
r 1000 8 0 0
ni
disassemble bubbleSortAVX512_v6(double*, int) 
ls
disassemble sort(double*, int) 
disassemble add_vectors(std::vector<float, std::allocator<float> > const&, std::vector<float, std::allocator<float> > const&, std::vector<float, std::allocator<float> >&) 
disassemble add_vectors(std::vector<float, std::allocator<float> > const&, std::vector<float, std::allocator<float> > const&, std::vector<float, std::allocator<float> >&) 
disassemble add_vectors(std::vector<float, std::allocator<float> > const&, std::vector<float, std::allocator<float> > const&, std::vector<float, std::allocator<float> >&) 
disassemble vectorize_function(std::vector<float, std::allocator<float> >&) 
disassemble add_vectors(std::vector<float, std::allocator<float> > const&, std::vector<float, std::allocator<float> > const&, std::vector<float, std::allocator<float> >&) 
disassemble vectorize_function(std::vector<float, std::allocator<float> >&) 
disass add_vectors(float*, float*, float*, unsigned long) 
disass add_vectors(float*, float*, float*, unsigned long) 
disassemble add_vectors(float*, float*, float*, int) 
disassemble add_vectors(float*, float*, float*, int) 
disassemble add_vectors(float*, float*, float*, int) 
disassemble add_vectors(float*, float*, float*, int) 
disassemble add_vectors(float*, float*, float*, int) 
disassemble add_vectors(float*, float*, float*, int) 
disassemble add_vectors(float*, float*, float*, int) 
disassemble add_vectors(float*, float*, float*, int) 
disassemble add_vectors(float*, float*, float*, int) 
disassemble selectionSort(float*, int) 
disassemble selectionSort(float*, int) 
disassemble add_vectors(float*, float*, float*, int) 
disassemble selectionSort(float*, int) 
disassemble add_vectors(float*, float*, float*, int) 
b * selectionSortAVX512_v5(double*, int) 
r
b * selectionSortAVX512_v5(double*, int) 
r
b * selectionSortAVX512_v5(double*, int) 
r
r 100 5 1 0
ni
disassemble selectionSortAVX512_v5(double*, int) 
ni
disassemble selectionSortAVX512_v5(double*, int) 
ni
ni
disassemble selectionSortAVX512_v5(double*, int) 
b * insertionSort
r
disassemble insertionSort
disassemble insertionSort
b  * insertionSort
disassemble insertionSort
disassemble main
disassemble sort(double*, int) 
b * sort(double*, int) 
r 100 1 1 0
r 100 0 1 0
b * sort(double*, int) 
r 100 4 1 0
disassemble main
r 100 4 1 0
b * sort(double*, int) 
r 100 4 1 0
r 100 5 1 0
r 100 6 1 0

b * sort(double*, int) 
r 100 4 1 0
r 100 4 2 0
r 100 4 3 0
r 100 4 4 0
disassemble sort(double*, int)
b * sort(double*, int)
r 100 6 1 0
disassemble sort
b * sort(double*, int) + 125
r 1000 6 1 0
r 1000 6 0 0
b * sort(double*, int) 
r 1000 6 0 0
disassemble sort(double*, int)
disassemble sort(double*, int) +290
b * sort(double*, int) +290
c
info registers 
disassemble sort(double*, int)
b * sort(double*, int) + 151
r 1000 6 0 0
info registers 
x/100fg $rcx
x/100fg $rsi
x/100fg $rdi
x/100x $rdi
x/100fg $rbi
x/100fg $rbp
x/200fg $rbp-100
info registers 
disassemble sort(double*, int)
info registers 
x/100fg $r11
b * sort(double*, int) + 151
r 1000 6 0 1
x/100fg $rdi
disassemble so
disassemble sort(double*, int)
b * sort(double*, int) + 183
c
x/100fg $rdi
b * sort(double*, int) + 183
r 1000 6 0 3
x/100fg $rdi
disassemble sort(double*, int)
b * sort(double*, int) + 151
r 1000 6 0 1
si
b * sort(double*, int) + 151
r 1000 6 0 1
ni
b * sort(double*, int) + 151
r 1000 6 0 1
si
ni
